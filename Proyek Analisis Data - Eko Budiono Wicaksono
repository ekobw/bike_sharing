{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1UmO3zH1wimHqQKx7wbt_tP_-Tazhl58x","timestamp":1700518123988}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Proyek Analisis Data: Bike Sharing Dataset\n","- Nama: Eko Budiono Wicaksono\n","- Email: ekobw.study@gmail.com\n","- Id Dicoding: 1741382"],"metadata":{"id":"cP5zh7Ww85Fm"}},{"cell_type":"markdown","source":["## Menentukan Pertanyaan Bisnis"],"metadata":{"id":"ggwOFmpI88dG"}},{"cell_type":"markdown","source":["- pertanyaan 1 : Berapa kah rata-rata sepeda yang disewa di tiap harinya dalam 1 minggu?\n","- pertanyaan 2 : Di musim apakah, pada setiap tahunnya, sepeda yang disewa paling banyak?"],"metadata":{"id":"6irqmTtg8-IC"}},{"cell_type":"markdown","source":["## Menyiapkan semua library yang dibutuhkan"],"metadata":{"id":"EueHsNk89AsY"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"4cmWv4qc8xWu","executionInfo":{"status":"ok","timestamp":1700557392258,"user_tz":-420,"elapsed":986,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"markdown","source":["## Data Wrangling"],"metadata":{"id":"7DwSpkkZ9BqV"}},{"cell_type":"markdown","source":["### Gathering Data"],"metadata":{"id":"ZuJuLGxe9D9O"}},{"cell_type":"markdown","source":["Load dataset day.csv"],"metadata":{"id":"0kKdVU8eiK7Q"}},{"cell_type":"code","source":["day_df = pd.read_csv(\"https://raw.githubusercontent.com/ekobw/Data-Science/main/day.csv\")\n","day_df.head()"],"metadata":{"id":"Rg3wtvOr9DUm","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1700557393055,"user_tz":-420,"elapsed":800,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"d2bcdd7a-42cb-4c32-de13-02a976b6182c"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   instant      dteday  season  yr  mnth  holiday  weekday  workingday  \\\n","0        1  2011-01-01       1   0     1        0        6           0   \n","1        2  2011-01-02       1   0     1        0        0           0   \n","2        3  2011-01-03       1   0     1        0        1           1   \n","3        4  2011-01-04       1   0     1        0        2           1   \n","4        5  2011-01-05       1   0     1        0        3           1   \n","\n","   weathersit      temp     atemp       hum  windspeed  casual  registered  \\\n","0           2  0.344167  0.363625  0.805833   0.160446     331         654   \n","1           2  0.363478  0.353739  0.696087   0.248539     131         670   \n","2           1  0.196364  0.189405  0.437273   0.248309     120        1229   \n","3           1  0.200000  0.212122  0.590435   0.160296     108        1454   \n","4           1  0.226957  0.229270  0.436957   0.186900      82        1518   \n","\n","    cnt  \n","0   985  \n","1   801  \n","2  1349  \n","3  1562  \n","4  1600  "],"text/html":["\n","  <div id=\"df-5e2d7422-6b99-4cba-90a3-82b7b17f2073\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>dteday</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0.344167</td>\n","      <td>0.363625</td>\n","      <td>0.805833</td>\n","      <td>0.160446</td>\n","      <td>331</td>\n","      <td>654</td>\n","      <td>985</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2011-01-02</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0.363478</td>\n","      <td>0.353739</td>\n","      <td>0.696087</td>\n","      <td>0.248539</td>\n","      <td>131</td>\n","      <td>670</td>\n","      <td>801</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2011-01-03</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.196364</td>\n","      <td>0.189405</td>\n","      <td>0.437273</td>\n","      <td>0.248309</td>\n","      <td>120</td>\n","      <td>1229</td>\n","      <td>1349</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2011-01-04</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.200000</td>\n","      <td>0.212122</td>\n","      <td>0.590435</td>\n","      <td>0.160296</td>\n","      <td>108</td>\n","      <td>1454</td>\n","      <td>1562</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2011-01-05</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.226957</td>\n","      <td>0.229270</td>\n","      <td>0.436957</td>\n","      <td>0.186900</td>\n","      <td>82</td>\n","      <td>1518</td>\n","      <td>1600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e2d7422-6b99-4cba-90a3-82b7b17f2073')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e2d7422-6b99-4cba-90a3-82b7b17f2073 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e2d7422-6b99-4cba-90a3-82b7b17f2073');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74f27650-1626-4a66-9772-336cd7f9ed95\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74f27650-1626-4a66-9772-336cd7f9ed95')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74f27650-1626-4a66-9772-336cd7f9ed95 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["Load dataset hour.csv"],"metadata":{"id":"v9k-xd57iQnx"}},{"cell_type":"code","source":["hour_df = pd.read_csv(\"https://raw.githubusercontent.com/ekobw/Data-Science/main/hour.csv\")\n","hour_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"p-shAx5GuT4J","executionInfo":{"status":"ok","timestamp":1700557393055,"user_tz":-420,"elapsed":16,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"a066e38f-13ad-4411-d2c6-5b9945dc529b"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   instant      dteday  season  yr  mnth  hr  holiday  weekday  workingday  \\\n","0        1  2011-01-01       1   0     1   0        0        6           0   \n","1        2  2011-01-01       1   0     1   1        0        6           0   \n","2        3  2011-01-01       1   0     1   2        0        6           0   \n","3        4  2011-01-01       1   0     1   3        0        6           0   \n","4        5  2011-01-01       1   0     1   4        0        6           0   \n","\n","   weathersit  temp   atemp   hum  windspeed  casual  registered  cnt  \n","0           1  0.24  0.2879  0.81        0.0       3          13   16  \n","1           1  0.22  0.2727  0.80        0.0       8          32   40  \n","2           1  0.22  0.2727  0.80        0.0       5          27   32  \n","3           1  0.24  0.2879  0.75        0.0       3          10   13  \n","4           1  0.24  0.2879  0.75        0.0       0           1    1  "],"text/html":["\n","  <div id=\"df-6eb6568a-6dba-45e8-b187-6c969549b443\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>dteday</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>hr</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.81</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eb6568a-6dba-45e8-b187-6c969549b443')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6eb6568a-6dba-45e8-b187-6c969549b443 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6eb6568a-6dba-45e8-b187-6c969549b443');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b55312c3-a6d9-4720-a217-d81be7f966c9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b55312c3-a6d9-4720-a217-d81be7f966c9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b55312c3-a6d9-4720-a217-d81be7f966c9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### Assessing Data"],"metadata":{"id":"BvZAfrSH9F2U"}},{"cell_type":"markdown","source":["#### Menilai tabel `day_df`"],"metadata":{"id":"TKODfxD_vRP-"}},{"cell_type":"markdown","source":["Check day_df information"],"metadata":{"id":"Gd9kbmAMiUH8"}},{"cell_type":"code","source":["day_df.info()"],"metadata":{"id":"fx7PaLsV9G8M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700557393055,"user_tz":-420,"elapsed":14,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"7a04d551-bc54-4966-958e-8d72640bf789"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 731 entries, 0 to 730\n","Data columns (total 16 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   instant     731 non-null    int64  \n"," 1   dteday      731 non-null    object \n"," 2   season      731 non-null    int64  \n"," 3   yr          731 non-null    int64  \n"," 4   mnth        731 non-null    int64  \n"," 5   holiday     731 non-null    int64  \n"," 6   weekday     731 non-null    int64  \n"," 7   workingday  731 non-null    int64  \n"," 8   weathersit  731 non-null    int64  \n"," 9   temp        731 non-null    float64\n"," 10  atemp       731 non-null    float64\n"," 11  hum         731 non-null    float64\n"," 12  windspeed   731 non-null    float64\n"," 13  casual      731 non-null    int64  \n"," 14  registered  731 non-null    int64  \n"," 15  cnt         731 non-null    int64  \n","dtypes: float64(4), int64(11), object(1)\n","memory usage: 91.5+ KB\n"]}]},{"cell_type":"markdown","source":["Check null values in day_df"],"metadata":{"id":"qlfzfObFiXFH"}},{"cell_type":"code","source":["day_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"StQlkNWtuioZ","executionInfo":{"status":"ok","timestamp":1700557393637,"user_tz":-420,"elapsed":42,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"3c51b949-4125-422a-b1b8-811da062f549"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["instant       0\n","dteday        0\n","season        0\n","yr            0\n","mnth          0\n","holiday       0\n","weekday       0\n","workingday    0\n","weathersit    0\n","temp          0\n","atemp         0\n","hum           0\n","windspeed     0\n","casual        0\n","registered    0\n","cnt           0\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["Check duplicate data in day_df"],"metadata":{"id":"yAEy7fNLiaWP"}},{"cell_type":"code","source":["print(\"Jumlah duplikasi: \", day_df.duplicated().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iuKyowmeuiuz","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":41,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"c79de145-0c83-46ff-b36a-c7750ee4d69a"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Jumlah duplikasi:  0\n"]}]},{"cell_type":"markdown","source":["Check description data in day_df"],"metadata":{"id":"X0fG6VM2ic5Q"}},{"cell_type":"code","source":["day_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"p3rizKMEui10","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":38,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"e2a49b74-8ae4-4128-9f44-ba2f0dc4d82c"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          instant      season          yr        mnth     holiday     weekday  \\\n","count  731.000000  731.000000  731.000000  731.000000  731.000000  731.000000   \n","mean   366.000000    2.496580    0.500684    6.519836    0.028728    2.997264   \n","std    211.165812    1.110807    0.500342    3.451913    0.167155    2.004787   \n","min      1.000000    1.000000    0.000000    1.000000    0.000000    0.000000   \n","25%    183.500000    2.000000    0.000000    4.000000    0.000000    1.000000   \n","50%    366.000000    3.000000    1.000000    7.000000    0.000000    3.000000   \n","75%    548.500000    3.000000    1.000000   10.000000    0.000000    5.000000   \n","max    731.000000    4.000000    1.000000   12.000000    1.000000    6.000000   \n","\n","       workingday  weathersit        temp       atemp         hum   windspeed  \\\n","count  731.000000  731.000000  731.000000  731.000000  731.000000  731.000000   \n","mean     0.683995    1.395349    0.495385    0.474354    0.627894    0.190486   \n","std      0.465233    0.544894    0.183051    0.162961    0.142429    0.077498   \n","min      0.000000    1.000000    0.059130    0.079070    0.000000    0.022392   \n","25%      0.000000    1.000000    0.337083    0.337842    0.520000    0.134950   \n","50%      1.000000    1.000000    0.498333    0.486733    0.626667    0.180975   \n","75%      1.000000    2.000000    0.655417    0.608602    0.730209    0.233214   \n","max      1.000000    3.000000    0.861667    0.840896    0.972500    0.507463   \n","\n","            casual   registered          cnt  \n","count   731.000000   731.000000   731.000000  \n","mean    848.176471  3656.172367  4504.348837  \n","std     686.622488  1560.256377  1937.211452  \n","min       2.000000    20.000000    22.000000  \n","25%     315.500000  2497.000000  3152.000000  \n","50%     713.000000  3662.000000  4548.000000  \n","75%    1096.000000  4776.500000  5956.000000  \n","max    3410.000000  6946.000000  8714.000000  "],"text/html":["\n","  <div id=\"df-6bd4983e-5619-47dd-a9a2-99c441a3aceb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","      <td>731.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>366.000000</td>\n","      <td>2.496580</td>\n","      <td>0.500684</td>\n","      <td>6.519836</td>\n","      <td>0.028728</td>\n","      <td>2.997264</td>\n","      <td>0.683995</td>\n","      <td>1.395349</td>\n","      <td>0.495385</td>\n","      <td>0.474354</td>\n","      <td>0.627894</td>\n","      <td>0.190486</td>\n","      <td>848.176471</td>\n","      <td>3656.172367</td>\n","      <td>4504.348837</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>211.165812</td>\n","      <td>1.110807</td>\n","      <td>0.500342</td>\n","      <td>3.451913</td>\n","      <td>0.167155</td>\n","      <td>2.004787</td>\n","      <td>0.465233</td>\n","      <td>0.544894</td>\n","      <td>0.183051</td>\n","      <td>0.162961</td>\n","      <td>0.142429</td>\n","      <td>0.077498</td>\n","      <td>686.622488</td>\n","      <td>1560.256377</td>\n","      <td>1937.211452</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.059130</td>\n","      <td>0.079070</td>\n","      <td>0.000000</td>\n","      <td>0.022392</td>\n","      <td>2.000000</td>\n","      <td>20.000000</td>\n","      <td>22.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>183.500000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.337083</td>\n","      <td>0.337842</td>\n","      <td>0.520000</td>\n","      <td>0.134950</td>\n","      <td>315.500000</td>\n","      <td>2497.000000</td>\n","      <td>3152.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>366.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.498333</td>\n","      <td>0.486733</td>\n","      <td>0.626667</td>\n","      <td>0.180975</td>\n","      <td>713.000000</td>\n","      <td>3662.000000</td>\n","      <td>4548.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>548.500000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>5.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.655417</td>\n","      <td>0.608602</td>\n","      <td>0.730209</td>\n","      <td>0.233214</td>\n","      <td>1096.000000</td>\n","      <td>4776.500000</td>\n","      <td>5956.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>731.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>12.000000</td>\n","      <td>1.000000</td>\n","      <td>6.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>0.861667</td>\n","      <td>0.840896</td>\n","      <td>0.972500</td>\n","      <td>0.507463</td>\n","      <td>3410.000000</td>\n","      <td>6946.000000</td>\n","      <td>8714.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bd4983e-5619-47dd-a9a2-99c441a3aceb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6bd4983e-5619-47dd-a9a2-99c441a3aceb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6bd4983e-5619-47dd-a9a2-99c441a3aceb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dfb33418-0697-4e45-baae-020e2b3819b2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfb33418-0697-4e45-baae-020e2b3819b2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dfb33418-0697-4e45-baae-020e2b3819b2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["#### Menilai tabel `hour_df`"],"metadata":{"id":"dQCtEFe9vMZd"}},{"cell_type":"markdown","source":["Check hour_df information"],"metadata":{"id":"xVqAumotifa6"}},{"cell_type":"code","source":["hour_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5GUgf7GDvHE0","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":36,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"d90ed691-f5fd-4fc0-cd91-960560456dcd"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 17379 entries, 0 to 17378\n","Data columns (total 17 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   instant     17379 non-null  int64  \n"," 1   dteday      17379 non-null  object \n"," 2   season      17379 non-null  int64  \n"," 3   yr          17379 non-null  int64  \n"," 4   mnth        17379 non-null  int64  \n"," 5   hr          17379 non-null  int64  \n"," 6   holiday     17379 non-null  int64  \n"," 7   weekday     17379 non-null  int64  \n"," 8   workingday  17379 non-null  int64  \n"," 9   weathersit  17379 non-null  int64  \n"," 10  temp        17379 non-null  float64\n"," 11  atemp       17379 non-null  float64\n"," 12  hum         17379 non-null  float64\n"," 13  windspeed   17379 non-null  float64\n"," 14  casual      17379 non-null  int64  \n"," 15  registered  17379 non-null  int64  \n"," 16  cnt         17379 non-null  int64  \n","dtypes: float64(4), int64(12), object(1)\n","memory usage: 2.3+ MB\n"]}]},{"cell_type":"markdown","source":["Check null values in hour_df"],"metadata":{"id":"S_hDIj1ziiQi"}},{"cell_type":"code","source":["hour_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fRCbJycZvHE1","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":31,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"04a734bf-80f1-4d48-fe19-629ac60b2e32"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["instant       0\n","dteday        0\n","season        0\n","yr            0\n","mnth          0\n","hr            0\n","holiday       0\n","weekday       0\n","workingday    0\n","weathersit    0\n","temp          0\n","atemp         0\n","hum           0\n","windspeed     0\n","casual        0\n","registered    0\n","cnt           0\n","dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Check duplicate data in hour_df"],"metadata":{"id":"tH3m1nFFiqLS"}},{"cell_type":"code","source":["print(\"Jumlah duplikasi: \", hour_df.duplicated().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHJQ2u5WvHE1","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":27,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"2b24e7d9-ddd1-4296-d287-e5417e8e4176"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Jumlah duplikasi:  0\n"]}]},{"cell_type":"markdown","source":["Check description data in hour_df"],"metadata":{"id":"TYD5KhgLisSN"}},{"cell_type":"code","source":["hour_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"WoxAZel2vHE1","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":24,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"f64275e4-e178-49f1-940e-c3098fe68752"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          instant        season            yr          mnth            hr  \\\n","count  17379.0000  17379.000000  17379.000000  17379.000000  17379.000000   \n","mean    8690.0000      2.501640      0.502561      6.537775     11.546752   \n","std     5017.0295      1.106918      0.500008      3.438776      6.914405   \n","min        1.0000      1.000000      0.000000      1.000000      0.000000   \n","25%     4345.5000      2.000000      0.000000      4.000000      6.000000   \n","50%     8690.0000      3.000000      1.000000      7.000000     12.000000   \n","75%    13034.5000      3.000000      1.000000     10.000000     18.000000   \n","max    17379.0000      4.000000      1.000000     12.000000     23.000000   \n","\n","            holiday       weekday    workingday    weathersit          temp  \\\n","count  17379.000000  17379.000000  17379.000000  17379.000000  17379.000000   \n","mean       0.028770      3.003683      0.682721      1.425283      0.496987   \n","std        0.167165      2.005771      0.465431      0.639357      0.192556   \n","min        0.000000      0.000000      0.000000      1.000000      0.020000   \n","25%        0.000000      1.000000      0.000000      1.000000      0.340000   \n","50%        0.000000      3.000000      1.000000      1.000000      0.500000   \n","75%        0.000000      5.000000      1.000000      2.000000      0.660000   \n","max        1.000000      6.000000      1.000000      4.000000      1.000000   \n","\n","              atemp           hum     windspeed        casual    registered  \\\n","count  17379.000000  17379.000000  17379.000000  17379.000000  17379.000000   \n","mean       0.475775      0.627229      0.190098     35.676218    153.786869   \n","std        0.171850      0.192930      0.122340     49.305030    151.357286   \n","min        0.000000      0.000000      0.000000      0.000000      0.000000   \n","25%        0.333300      0.480000      0.104500      4.000000     34.000000   \n","50%        0.484800      0.630000      0.194000     17.000000    115.000000   \n","75%        0.621200      0.780000      0.253700     48.000000    220.000000   \n","max        1.000000      1.000000      0.850700    367.000000    886.000000   \n","\n","                cnt  \n","count  17379.000000  \n","mean     189.463088  \n","std      181.387599  \n","min        1.000000  \n","25%       40.000000  \n","50%      142.000000  \n","75%      281.000000  \n","max      977.000000  "],"text/html":["\n","  <div id=\"df-a9c20b72-6eaa-4372-a576-30937b8a134c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>hr</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>17379.0000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","      <td>17379.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>8690.0000</td>\n","      <td>2.501640</td>\n","      <td>0.502561</td>\n","      <td>6.537775</td>\n","      <td>11.546752</td>\n","      <td>0.028770</td>\n","      <td>3.003683</td>\n","      <td>0.682721</td>\n","      <td>1.425283</td>\n","      <td>0.496987</td>\n","      <td>0.475775</td>\n","      <td>0.627229</td>\n","      <td>0.190098</td>\n","      <td>35.676218</td>\n","      <td>153.786869</td>\n","      <td>189.463088</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5017.0295</td>\n","      <td>1.106918</td>\n","      <td>0.500008</td>\n","      <td>3.438776</td>\n","      <td>6.914405</td>\n","      <td>0.167165</td>\n","      <td>2.005771</td>\n","      <td>0.465431</td>\n","      <td>0.639357</td>\n","      <td>0.192556</td>\n","      <td>0.171850</td>\n","      <td>0.192930</td>\n","      <td>0.122340</td>\n","      <td>49.305030</td>\n","      <td>151.357286</td>\n","      <td>181.387599</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.0000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.020000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>4345.5000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.340000</td>\n","      <td>0.333300</td>\n","      <td>0.480000</td>\n","      <td>0.104500</td>\n","      <td>4.000000</td>\n","      <td>34.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>8690.0000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>7.000000</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>0.484800</td>\n","      <td>0.630000</td>\n","      <td>0.194000</td>\n","      <td>17.000000</td>\n","      <td>115.000000</td>\n","      <td>142.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>13034.5000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>10.000000</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>5.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.660000</td>\n","      <td>0.621200</td>\n","      <td>0.780000</td>\n","      <td>0.253700</td>\n","      <td>48.000000</td>\n","      <td>220.000000</td>\n","      <td>281.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17379.0000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>12.000000</td>\n","      <td>23.000000</td>\n","      <td>1.000000</td>\n","      <td>6.000000</td>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.850700</td>\n","      <td>367.000000</td>\n","      <td>886.000000</td>\n","      <td>977.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9c20b72-6eaa-4372-a576-30937b8a134c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9c20b72-6eaa-4372-a576-30937b8a134c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9c20b72-6eaa-4372-a576-30937b8a134c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-42bcf543-5f0f-4c1e-83fe-4e66deda2343\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42bcf543-5f0f-4c1e-83fe-4e66deda2343')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-42bcf543-5f0f-4c1e-83fe-4e66deda2343 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["### Cleaning Data"],"metadata":{"id":"Uz5dgcJm9HW5"}},{"cell_type":"markdown","source":["Replace year code with year number"],"metadata":{"id":"2iN2OGKnivJc"}},{"cell_type":"code","source":["year = {0:2011, 1:2012}\n","hour_df['yr'] = hour_df['yr'].replace(year)\n","hour_df['yr'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWyf7lyOBzYf","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":22,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"82d88e8f-fded-403f-d39f-ac565b4e1b17"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2012    8734\n","2011    8645\n","Name: yr, dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Replace season code with season name"],"metadata":{"id":"YiqujKUGiyeN"}},{"cell_type":"code","source":["season = {1:'springer', 2:'summer', 3:'fall', 4:'winter'}\n","hour_df['season'] = hour_df['season'].replace(season)\n","hour_df['season'].value_counts()"],"metadata":{"id":"CCszTdXD9Ivf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":19,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"238509b0-90ae-477c-cdf0-c78433a6fd56"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["fall        4496\n","summer      4409\n","springer    4242\n","winter      4232\n","Name: season, dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["Replace weekday code with day name"],"metadata":{"id":"d79Sv9cHi0gj"}},{"cell_type":"code","source":["day = {0:'sunday', 1:'monday', 2:'tuesday', 3:'wednesday', 4:'thursday', 5:'friday', 6:'saturday'}\n","hour_df['weekday'] = hour_df['weekday'].replace(day)\n","hour_df['weekday'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G_tjHbYLBO2w","executionInfo":{"status":"ok","timestamp":1700557393638,"user_tz":-420,"elapsed":17,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"37e9174d-fe8f-4440-e8fa-2658fd7bec33"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["saturday     2512\n","sunday       2502\n","friday       2487\n","monday       2479\n","wednesday    2475\n","thursday     2471\n","tuesday      2453\n","Name: weekday, dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["## Exploratory Data Analysis (EDA)"],"metadata":{"id":"EyPJaCDm9KFb"}},{"cell_type":"markdown","source":["### Explore ..."],"metadata":{"id":"hxgJ6qd69Mce"}},{"cell_type":"markdown","source":["Create pivot table to calculate the average of rental bikes each day in a week"],"metadata":{"id":"U_7vJ97Ci3NR"}},{"cell_type":"code","source":["average_rental_bike = hour_df.groupby('weekday').agg({'cnt':'mean'}).sort_values(by='cnt', ascending=False)\n","\n","average_rental_bike"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"9w2VK6LjZ3kq","executionInfo":{"status":"ok","timestamp":1700557393639,"user_tz":-420,"elapsed":16,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"1fa9de3f-8412-4847-8bb8-4bc237e70f5f"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  cnt\n","weekday              \n","thursday   196.436665\n","friday     196.135907\n","tuesday    191.238891\n","wednesday  191.130505\n","saturday   190.209793\n","monday     183.744655\n","sunday     177.468825"],"text/html":["\n","  <div id=\"df-1532b748-ee6d-4550-a80d-582f0b1e3ed5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cnt</th>\n","    </tr>\n","    <tr>\n","      <th>weekday</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>thursday</th>\n","      <td>196.436665</td>\n","    </tr>\n","    <tr>\n","      <th>friday</th>\n","      <td>196.135907</td>\n","    </tr>\n","    <tr>\n","      <th>tuesday</th>\n","      <td>191.238891</td>\n","    </tr>\n","    <tr>\n","      <th>wednesday</th>\n","      <td>191.130505</td>\n","    </tr>\n","    <tr>\n","      <th>saturday</th>\n","      <td>190.209793</td>\n","    </tr>\n","    <tr>\n","      <th>monday</th>\n","      <td>183.744655</td>\n","    </tr>\n","    <tr>\n","      <th>sunday</th>\n","      <td>177.468825</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1532b748-ee6d-4550-a80d-582f0b1e3ed5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1532b748-ee6d-4550-a80d-582f0b1e3ed5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1532b748-ee6d-4550-a80d-582f0b1e3ed5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46960ae8-4318-4d1e-81a7-9f5c3e61f945\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46960ae8-4318-4d1e-81a7-9f5c3e61f945')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46960ae8-4318-4d1e-81a7-9f5c3e61f945 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["Create pivot table to sum rental bikes per year and per season"],"metadata":{"id":"WhZzTne2i58Q"}},{"cell_type":"code","source":["season_per_year = pd.pivot_table(hour_df, values='cnt', index='season', columns='yr', aggfunc='sum')\n","\n","season_per_year"],"metadata":{"id":"Xo68yguo9LTl","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1700557393639,"user_tz":-420,"elapsed":14,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"71e10506-8e1f-4a3a-b425-d92c2f95b25d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["yr          2011    2012\n","season                  \n","fall      419650  641479\n","springer  150000  321348\n","summer    347316  571273\n","winter    326137  515476"],"text/html":["\n","  <div id=\"df-5768ae20-3e52-44f9-9c67-f0d034c3deba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>yr</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","    </tr>\n","    <tr>\n","      <th>season</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>fall</th>\n","      <td>419650</td>\n","      <td>641479</td>\n","    </tr>\n","    <tr>\n","      <th>springer</th>\n","      <td>150000</td>\n","      <td>321348</td>\n","    </tr>\n","    <tr>\n","      <th>summer</th>\n","      <td>347316</td>\n","      <td>571273</td>\n","    </tr>\n","    <tr>\n","      <th>winter</th>\n","      <td>326137</td>\n","      <td>515476</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5768ae20-3e52-44f9-9c67-f0d034c3deba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5768ae20-3e52-44f9-9c67-f0d034c3deba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5768ae20-3e52-44f9-9c67-f0d034c3deba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a30cd079-9e10-4226-a269-850bb2815122\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a30cd079-9e10-4226-a269-850bb2815122')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a30cd079-9e10-4226-a269-850bb2815122 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["## Visualization & Explanatory Analysis"],"metadata":{"id":"SCNmtOLp9OKB"}},{"cell_type":"markdown","source":["### Pertanyaan 1: Berapa kah rata-rata sepeda yang disewa di tiap harinya dalam 1 minggu?"],"metadata":{"id":"SG59_Fbj9Qr6"}},{"cell_type":"markdown","source":["Create bar plot from previous average_rental_bike pivot table"],"metadata":{"id":"i9qqHkmgi8vD"}},{"cell_type":"code","source":["average_rental_bike_list = average_rental_bike.index.tolist()\n","\n","fig, ax = plt.subplots(figsize=(8, 6))\n","ax = sns.barplot(hour_df, x='cnt', y='weekday', estimator='mean', order=average_rental_bike_list, errorbar=None)\n","ax.bar_label(ax.containers[0], fontsize=10)\n","ax.set_title('Average Rental Bikes per Day')\n","ax.set_xlabel('Rental Bikes')\n","ax.set_ylabel('Day')\n","\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"kHv9U7SHaOIn","executionInfo":{"status":"ok","timestamp":1700557394034,"user_tz":-420,"elapsed":408,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"8cf4109a-e390-44a9-bcc9-97b1c80b565d"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Pertanyaan 2: Di musim apakah, pada setiap tahunnya, sepeda yang disewa paling banyak?"],"metadata":{"id":"F2Bo_ypQ9RfH"}},{"cell_type":"markdown","source":["Create bar plot from previous season_per_year pivot table"],"metadata":{"id":"ACYL3RBDjAO_"}},{"cell_type":"code","source":["season_per_year = pd.pivot_table(hour_df, values='cnt', index='season', columns='yr', aggfunc='sum')\n","season_per_year = season_per_year.reset_index()\n","\n","melted_season_per_year = season_per_year.melt(id_vars='season', var_name='Year', value_name='Sum of Rental Bikes')\n","\n","fig, ax = plt.subplots(figsize=(8, 6))\n","ax = sns.barplot(x='season', y='Sum of Rental Bikes', hue='Year', data=melted_season_per_year)\n","ax.bar_label(ax.containers[0], fontsize=10)\n","ax.bar_label(ax.containers[1], fontsize=10)\n","ax.set_xlabel(\"Season\")\n","ax.set_ylabel(\"Sum of Rental Bikes\")\n","ax.set_title(\"Rental Bikes per Season per Year\")\n","ax.legend(title='Year')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"TzPcb3_PL5-s","executionInfo":{"status":"ok","timestamp":1700557394483,"user_tz":-420,"elapsed":456,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}},"outputId":"adff8fc3-22c0-41b8-dada-9221dcf2682a"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Conclusion"],"metadata":{"id":"J2CnXYGT9Tc2"}},{"cell_type":"markdown","source":["- Conclution pertanyaan 1 : Rata-rata sewa sepeda paling banyak dilakukan di hari Kamis dan Jumat, yaitu sekitar 196 sepeda per hari.\n","- conclution pertanyaan 2 : Sewa sepeda paling banyak dilakukan adalah di musim gugur, trend ini berlaku sama baik di tahun 2011 maupun di tahun 2012."],"metadata":{"id":"f73FBkLw9V8C"}},{"cell_type":"code","source":["hour_df.to_csv(\"all_hour.csv\", index=False)"],"metadata":{"id":"hDJXYGoB50gd","executionInfo":{"status":"ok","timestamp":1700557395171,"user_tz":-420,"elapsed":694,"user":{"displayName":"Eko BW","userId":"04402506835837392711"}}},"execution_count":19,"outputs":[]}]}